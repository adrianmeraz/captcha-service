name: Dev Feature Pull Request
on:
  pull_request:
    branches:
      - dev
    paths:
      - '**.py'
      - '**.yml'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'pyproject.toml'

jobs:
  test:
    name: Pull Dependencies, Build, Test, Upload Coverage
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ github.event.repository.name }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT: dev
      GH_PAT: ${{ secrets.GH_PAT }}
      SHARED_APP_NAME: expatmagic
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Empty prefixes not supported yet, pending this PR: https://github.com/aws-actions/aws-secretsmanager-get-secrets/pull/16
    # Using EM for now
    - name: Get Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      env:
        SSM_SECRET_ID: ${{ env.APP_NAME }}/${{ env.ENVIRONMENT }}/secret
      with:
        secret-ids: |
          EM,${{ env.SSM_SECRET_ID }}
        parse-json-secrets: true

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: ‘2’

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    # https://www.peterbe.com/plog/install-python-poetry-github-actions-faster
    - name: Load cached Poetry via ~/.local
      uses: actions/cache@v4
      with:
        path: ~/.local
        key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/dev.yml') }}

    - name: Install / Load Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached dependencies via .venv
      id: cache-virtualenv
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/dev.yml') }}

    - name: Install / Load Poetry dependencies
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      run: poetry install

    - name: Run tests and generate Coverage Report
      run: |
        poetry run coverage run -m unittest
        poetry run coverage xml

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4-beta
      env:
        CODECOV_TOKEN: ${{ env.EM_CODECOV_TOKEN }}

    - name: Checkout Terraform Repo
      uses: actions/checkout@v4
      with:
        ref: main
        repository: 'adrianmeraz/am-terraform'
        token: ${{ secrets.GH_PAT }}

    - name: terraform plan
      uses: dflook/terraform-plan@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        LABEL: ${{ env.APP_NAME }}-${{ env.ENVIRONMENT }}
      with:
        add_github_comment: false
        path: apps/${{ env.APP_NAME }}/environments/${{ env.ENVIRONMENT }}
        label: ${{ env.LABEL }}
        variables: |
          app_name                       = "${{ env.APP_NAME }}"
          aws_access_key                 = "${{ env.AWS_ACCESS_KEY_ID }}"
          aws_region                     = "${{ env.AWS_REGION }}"
          aws_secret_key                 = "${{ env.AWS_SECRET_ACCESS_KEY }}"
          environment                    = "${{ env.ENVIRONMENT }}"
          shared_app_name                = "${{ env.SHARED_APP_NAME }}"
