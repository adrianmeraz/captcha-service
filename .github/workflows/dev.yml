name: Dev Push
on:
  push:
    branches:
      - dev
    paths:
      - '**.py'
      - '**.yml'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'pyproject.toml'

jobs:
  main:
    name: Build Image, Push to ECR, Apply Terraform Plan, Raise PR
    runs-on: ubuntu-latest
    env:
      APP_NAME:              ${{ github.event.repository.name }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION:            ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT:           dev
      GH_PAT:                ${{ secrets.GH_PAT }}
      SHARED_APP_NAME:       expatmagic
      TF_PATH_PREFIX:        apps/${{ github.event.repository.name }}/environments
      TF_PLUGIN_CACHE_DIR:   ${{ github.workspace }}/.terraform.d/plugin-cache

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region:            ${{ env.AWS_REGION }}
    # Empty prefixes not supported yet, pending this PR:
    # https://github.com/aws-actions/aws-secretsmanager-get-secrets/pull/16
    # Using SSM for now
    - name: Get Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      env:
        SSM_SECRET_ID: ${{ env.APP_NAME }}/${{ env.ENVIRONMENT }}/secret
      with:
        secret-ids: |
          SSM,${{ env.SSM_SECRET_ID }}
        parse-json-secrets: true

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: ‘2’

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image, cache layers, and push to ECR
      env:
        REPOSITORY_URL:  ${{ env.SSM_AWS_ECR_REPOSITORY_URL }}
        IMAGE_TAG:       "latest"
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        provenance: false # Required per https://stackoverflow.com/a/75149347
        tags: ${{ env.REPOSITORY_URL }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Checkout Terraform Repo
      uses: actions/checkout@v4
      with:
        ref: main
        repository: 'adrianmeraz/am-terraform'
        token: ${{ env.GH_PAT }}

    # Caching Terraform plugin and modules per:
    # https://github.com/dflook/terraform-github-actions/issues/105
    # Additional resources on caching plugins:
    # https://github.com/hashicorp/setup-terraform/issues/4#issuecomment-862039542

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.1

    - name: Create Terraform Plugin Cache Dir
      run: mkdir --parents ${{ env.TF_PLUGIN_CACHE_DIR }}

    - name: Load Terraform cache
      id: tf-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.TF_PLUGIN_CACHE_DIR }}
        key: ${{ runner.os }}-tf-${{ hashFiles('**/.terraform.lock.hcl') }}-d

    - name: Set Terraform Working Directory
      run: |
        echo "TF_WORKING_DIR=${{ env.TF_PATH_PREFIX }}/${{ env.ENVIRONMENT }}" >> $GITHUB_ENV

    - name: Terraform init
      working-directory: ${{ env.TF_WORKING_DIR }}
      id: tf-init
      run: terraform init

    - name: Terraform Apply
      working-directory: ${{ env.TF_WORKING_DIR }}
      id: tf-apply
      run: |
        terraform apply -auto-approve -input=false -parallelism=50 \
          -var app_name="${{ env.APP_NAME }}" \
          -var aws_access_key="${{ env.AWS_ACCESS_KEY_ID }}" \
          -var aws_region="${{ env.AWS_REGION }}" \
          -var aws_secret_key="${{ env.AWS_SECRET_ACCESS_KEY }}" \
          -var environment="${{ env.ENVIRONMENT }}" \
          -var shared_app_name="${{ env.SHARED_APP_NAME }}" \

#    - name: Terraform apply
#      uses: dflook/terraform-apply@v1
#      env:
#        GITHUB_TOKEN: ${{ env.GH_PAT }}
#      with:
#        path:  apps/${{ env.APP_NAME }}/environments/${{ env.ENVIRONMENT }}
#        auto_approve: true
#        parallelism: 50
#        variables: |
#          app_name        = "${{ env.APP_NAME }}"
#          aws_access_key  = "${{ env.AWS_ACCESS_KEY_ID }}"
#          aws_region      = "${{ env.AWS_REGION }}"
#          aws_secret_key  = "${{ env.AWS_SECRET_ACCESS_KEY }}"
#          environment     = "${{ env.ENVIRONMENT }}"
#          shared_app_name = "${{ env.SHARED_APP_NAME }}"

    - name: Checkout Main Branch
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Reset main branch
      run: |
        git fetch origin dev:dev
        git reset --hard dev

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        branch: main-promotion
        delete-branch: true
        title: Promote dev to main branch
